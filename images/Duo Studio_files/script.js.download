// function init(){
//     gsap.registerPlugin(ScrollTrigger);

// const locoScroll = new LocomotiveScroll({
//   el: document.querySelector(".main"),
//   smooth: true
// });

// locoScroll.on("scroll", ScrollTrigger.update);

// ScrollTrigger.scrollerProxy(".main", {
//   scrollTop(value) {
//     return arguments.length ? locoScroll.scrollTo(value, 0, 0) : locoScroll.scroll.instance.scroll.y;
//   }, 
//   getBoundingClientRect() {
//     return {top: 0, left: 0, width: window.innerWidth, height: window.innerHeight};
//   },
  
//   pinType: document.querySelector(".main").style.transform ? "transform" : "fixed"
// });

// ScrollTrigger.addEventListener("refresh", () => locoScroll.update());

// ScrollTrigger.refresh();

// }

// init()

//  var tl=gsap.timeline({
//   duration:1,
//   ScrollTrigger:{
//       trigger:".page-1 h1",
//       scroller:".main",
//       markers:true,
//       start:"top 30%",
//       end:"top 0",
//       scrub:3
//   }
// })
// tl.to(".page-1 h1",{
//     x:-200,
    
// },"anim")
//  tl.to(".page-1 h2",{
// x:200,
//  },"anim")
  
//  tl.to(".page-1 video",{
//   width:"90%",
  
//  },"anim")

//  var tl2=gsap.timeline({
//   duration:1,
//   ScrollTrigger:{
//       trigger:".page-1 h1",
//       scroller:".main",
//       markers:true,
//       start:"top -127%",
//       end:"top -130%",
//       scrub:3
//   }
// })

//  tl2.to(".main",{
//   backgroundColor:"#fff"
//  })

//  var tl3=gsap.timeline({
//   duration:1,
//   ScrollTrigger:{
//       trigger:".page-1 h1",
//       scroller:".main",
//       markers:true,
//       start:"top -200%",
//       end:"top -210%",
//       scrub:3
//   }
// })
// tl3.to(".main",{
//   backgroundColor:"black";
// })
function init() {
    gsap.registerPlugin(ScrollTrigger);
  
    const locoScroll = new LocomotiveScroll({
        el: document.querySelector(".main"),
        smooth: true
    });
    locoScroll.on("scroll", ScrollTrigger.update);
  
    ScrollTrigger.scrollerProxy(".main", {
        scrollTop(value) {
            return arguments.length ? locoScroll.scrollTo(value, 0, 0) : locoScroll.scroll.instance.scroll.y;
        }, // we don't have to define a scrollLeft because we're only scrolling vertically.
        getBoundingClientRect() {
            return { top: 0, left: 0, width: window.innerWidth, height: window.innerHeight };
        },
        pinType: document.querySelector(".main").style.transform ? "transform" : "fixed"
    });
  
  
    ScrollTrigger.addEventListener("refresh", () => locoScroll.update());
  
    ScrollTrigger.refresh();
  
  }
  
  init()
  
  var crsr = document.querySelector(".cursor")
  var main = document.querySelector(".main")
  document.addEventListener("mousemove",function(dets){
    crsr.style.left = dets.x + 20+"px"
    crsr.style.top = dets.y + 20+"px"
  })
  
  gsap.from(".page1 h1,.page1 h2", {
    y: 10,
    rotate: 10,
    opacity: 0,
    delay: 0.3,
    duration: 0.7
  })
  var tl = gsap.timeline({
    scrollTrigger: {
        trigger: ".page1 h1",
        scroller: ".main",
        // markers:true,
        start: "top 27%",
        end: "top 0",
        scrub: 3
    }
  })
  tl.to(".page1 h1", {
    x: -100,
  }, "anim")
  tl.to(".page1 h2", {
    x: 100
  }, "anim")
  tl.to(".page1 video", {
    width: "100%"
  }, "anim")
  
  var tl2 = gsap.timeline({
    scrollTrigger: {
        trigger: ".page1 h1",
        scroller: ".main",
        // markers:true,
        start: "top -80%",
        end: "top -100%",
        scrub: 3
    }
  })
  tl2.to(".main", {
    backgroundColor: "#fff",
  })
  
  var tl3 = gsap.timeline({
    scrollTrigger: {
        trigger: ".page1 h1",
        scroller: ".main",
        // markers:true,
        start: "top -250%",
        end: "top -280%",
        scrub: 3
    }
  })
  
  tl3.to(".main",{
    backgroundColor:"#0F0D0D"
  })
  
  